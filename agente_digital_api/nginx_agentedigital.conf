# /etc/nginx/sites-available/agentedigital
# Configuración de Nginx para Agente Digital

# Configuración de rate limiting
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=3r/m;
limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=5r/m;

# Upstream para load balancing (preparado para múltiples workers)
upstream agentedigital_app {
    # Configuración básica con un servidor
    server 127.0.0.1:8000 max_fails=3 fail_timeout=30s;
    
    # Para múltiples instancias (comentado por ahora):
    # server 127.0.0.1:8001 max_fails=3 fail_timeout=30s;
    # server 127.0.0.1:8002 max_fails=3 fail_timeout=30s;
    
    # Configuraciones de balancing
    keepalive 32;
}

# Configuración de cache para archivos estáticos
proxy_cache_path /var/cache/nginx/agentedigital levels=1:2 keys_zone=agentedigital_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Redirección de HTTP a HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name agentedigital.local localhost;  # Cambiar por dominio real
    
    # Permitir Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # Redireccionar todo el tráfico a HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Configuración principal HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name agentedigital.local localhost;  # Cambiar por dominio real
    
    # Configuración SSL (usar certificados reales en producción)
    # ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    
    # Para desarrollo local con certificado autofirmado:
    ssl_certificate /etc/ssl/certs/agentedigital.crt;
    ssl_certificate_key /etc/ssl/private/agentedigital.key;
    
    # Configuración SSL segura
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # Headers de seguridad
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self';" always;
    
    # Configuración de cliente
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    client_body_buffer_size 1M;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # Compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Logging
    access_log /var/log/nginx/agentedigital_access.log combined;
    error_log /var/log/nginx/agentedigital_error.log warn;
    
    # Root y index
    root /home/agentedigital/apps/agentedigital;
    index index.html;
    
    # Health check endpoint (sin rate limiting)
    location = /health {
        access_log off;
        proxy_pass http://agentedigital_app;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API endpoints con rate limiting
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        limit_req_status 429;
        
        proxy_pass http://agentedigital_app;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # Headers adicionales para debugging
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # Login endpoint con rate limiting más estricto
    location /api/auth/login {
        limit_req zone=login_limit burst=5 nodelay;
        limit_req_status 429;
        
        proxy_pass http://agentedigital_app;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # Endpoints de upload con rate limiting
    location ~* /api/.*/upload {
        limit_req zone=upload_limit burst=10 nodelay;
        
        proxy_pass http://agentedigital_app;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # Configuraciones específicas para uploads
        proxy_request_buffering off;
        proxy_buffering off;
    }
    
    # Archivos estáticos con cache
    location /static/ {
        alias /home/agentedigital/apps/agentedigital/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Security headers para archivos estáticos
        add_header X-Content-Type-Options nosniff;
        
        # Manejar archivos no encontrados
        try_files $uri $uri/ =404;
    }
    
    # Archivos de uploads (protegidos)
    location /uploads/ {
        internal;  # Solo accesible desde el backend
        alias /home/agentedigital/apps/agentedigital/uploads/;
        
        # Headers de seguridad para descargas
        add_header X-Content-Type-Options nosniff;
        add_header Content-Disposition attachment;
    }
    
    # Frontend SPA (Vue.js)
    location / {
        try_files $uri $uri/ @proxy_to_app;
        
        # Cache para archivos del frontend
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
    }
    
    # Proxy principal para la aplicación
    location @proxy_to_app {
        proxy_pass http://agentedigital_app;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # Manejar WebSockets si es necesario
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Bloquear acceso a archivos sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|ini|conf|cnf|sql|bak)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Bloquear bots maliciosos
    location ~* (wp-admin|wp-login|phpmyadmin|admin|xmlrpc) {
        return 444;
    }
    
    # Error pages personalizadas
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# Configuración para métricas y monitoreo (opcional)
server {
    listen 127.0.0.1:8080;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}