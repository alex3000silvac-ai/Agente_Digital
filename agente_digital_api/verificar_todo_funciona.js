// =====================================================================
// VERIFICACI√ìN COMPLETA DE LA SOLUCI√ìN
// Ejecutar despu√©s de aplicar solucion_definitiva.js
// =====================================================================

console.log('üîç VERIFICANDO QUE TODO FUNCIONE...\n');

// Funci√≥n auxiliar para verificar elementos
function verificarElemento(selector, descripcion) {
    const elemento = document.querySelector(selector);
    if (elemento) {
        console.log(`‚úÖ ${descripcion}: ENCONTRADO`);
        return true;
    } else {
        console.log(`‚ùå ${descripcion}: NO ENCONTRADO`);
        return false;
    }
}

// Obtener componente
const comp = window.debugAcordeon || document.querySelector('.acordeon-incidente-mejorado')?.__vueParentComponent;

if (!comp) {
    console.error('‚ùå No se encontr√≥ el componente. Ejecuta primero solucion_definitiva.js');
} else {
    console.log('‚úÖ Componente encontrado\n');
    
    // 1. VERIFICAR ARCHIVOS
    console.log('üìé VERIFICACI√ìN DE ARCHIVOS:');
    const archivosS2 = comp.ctx.archivosSeccion2?.value?.length || 0;
    const archivosS3 = comp.ctx.archivosSeccion3?.value?.length || 0;
    const archivosS5 = comp.ctx.archivosSeccion5?.value?.length || 0;
    const archivosS6 = comp.ctx.archivosSeccion6?.value?.length || 0;
    const totalArchivos = archivosS2 + archivosS3 + archivosS5 + archivosS6;
    
    console.log(`  Secci√≥n 2: ${archivosS2} archivos`);
    console.log(`  Secci√≥n 3: ${archivosS3} archivos`);
    console.log(`  Secci√≥n 5: ${archivosS5} archivos`);
    console.log(`  Secci√≥n 6: ${archivosS6} archivos`);
    console.log(`  TOTAL: ${totalArchivos} archivos`);
    
    if (totalArchivos > 0) {
        console.log('  ‚úÖ Archivos cargados correctamente');
        
        // Verificar botones de gesti√≥n
        setTimeout(() => {
            const botonesVer = document.querySelectorAll('.btn-ver-archivo').length;
            const botonesEliminar = document.querySelectorAll('.btn-eliminar-archivo').length;
            console.log(`\n  üìå Botones de gesti√≥n:`);
            console.log(`    - Botones Ver: ${botonesVer}`);
            console.log(`    - Botones Eliminar: ${botonesEliminar}`);
            
            if (botonesVer > 0 && botonesEliminar > 0) {
                console.log('    ‚úÖ Botones de gesti√≥n presentes');
            } else {
                console.log('    ‚ö†Ô∏è Faltan botones de gesti√≥n');
            }
        }, 500);
    } else {
        console.log('  ‚ùå NO SE CARGARON ARCHIVOS');
    }
    
    // 2. VERIFICAR TAXONOM√çAS
    console.log('\nüè∑Ô∏è VERIFICACI√ìN DE TAXONOM√çAS:');
    const taxonomias = comp.ctx.taxonomiasSeleccionadas?.value || [];
    console.log(`  Total taxonom√≠as: ${taxonomias.length}`);
    
    if (taxonomias.length > 0) {
        console.log('  ‚úÖ Taxonom√≠as cargadas');
        
        // Verificar justificaciones
        let conJustificacion = 0;
        taxonomias.forEach((tax, idx) => {
            if (tax.justificacion && tax.justificacion.trim()) {
                conJustificacion++;
            }
        });
        console.log(`  üìù Taxonom√≠as con justificaci√≥n: ${conJustificacion}/${taxonomias.length}`);
        
        // Verificar checkboxes marcados
        setTimeout(() => {
            const checkboxesMarcados = document.querySelectorAll('.taxonomia-checkbox:checked').length;
            console.log(`  ‚òëÔ∏è Checkboxes marcados: ${checkboxesMarcados}`);
            
            if (checkboxesMarcados === taxonomias.length) {
                console.log('  ‚úÖ Todos los checkboxes est√°n marcados correctamente');
            } else {
                console.log(`  ‚ö†Ô∏è Discrepancia en checkboxes (esperados: ${taxonomias.length}, marcados: ${checkboxesMarcados})`);
            }
        }, 500);
    } else {
        console.log('  ‚ùå NO SE CARGARON TAXONOM√çAS');
    }
    
    // 3. VERIFICAR SECCI√ìN 7 (RESUMEN)
    console.log('\nüìä VERIFICACI√ìN DE SECCI√ìN 7:');
    const archivosResumen = comp.ctx.todosLosArchivos?.value?.length || 0;
    console.log(`  Archivos en resumen: ${archivosResumen}`);
    
    if (archivosResumen === totalArchivos && archivosResumen > 0) {
        console.log('  ‚úÖ Secci√≥n 7 muestra todos los archivos correctamente');
    } else if (archivosResumen > 0) {
        console.log(`  ‚ö†Ô∏è Discrepancia en cantidad (total: ${totalArchivos}, resumen: ${archivosResumen})`);
    } else {
        console.log('  ‚ùå Secci√≥n 7 no muestra archivos');
    }
    
    // 4. VERIFICAR CAMPOS DEL FORMULARIO
    console.log('\nüìù VERIFICACI√ìN DE CAMPOS:');
    const formData = comp.ctx.formData?.value || {};
    let camposLlenos = 0;
    let camposVacios = 0;
    
    Object.entries(formData).forEach(([key, value]) => {
        if (value && value !== '') {
            camposLlenos++;
        } else {
            camposVacios++;
        }
    });
    
    console.log(`  Campos llenos: ${camposLlenos}`);
    console.log(`  Campos vac√≠os: ${camposVacios}`);
    
    if (camposLlenos > 10) {
        console.log('  ‚úÖ Formulario cargado con datos');
    } else {
        console.log('  ‚ö†Ô∏è Pocos campos llenos en el formulario');
    }
    
    // RESUMEN FINAL
    console.log('\n' + '='.repeat(60));
    console.log('üìã RESUMEN DE VERIFICACI√ìN:');
    console.log('='.repeat(60));
    
    const todoOk = totalArchivos > 0 && taxonomias.length > 0 && archivosResumen > 0 && camposLlenos > 10;
    
    if (todoOk) {
        console.log('‚úÖ TODOS LOS COMPONENTES FUNCIONAN CORRECTAMENTE');
        console.log('\nLa soluci√≥n ha sido aplicada exitosamente.');
    } else {
        console.log('‚ö†Ô∏è HAY COMPONENTES QUE NO FUNCIONAN CORRECTAMENTE');
        console.log('\nProblemas detectados:');
        if (totalArchivos === 0) console.log('  - No se muestran archivos');
        if (taxonomias.length === 0) console.log('  - No se muestran taxonom√≠as');
        if (archivosResumen === 0) console.log('  - Secci√≥n 7 vac√≠a');
        if (camposLlenos <= 10) console.log('  - Formulario sin datos');
        console.log('\nIntenta recargar la p√°gina y ejecutar solucion_definitiva.js nuevamente.');
    }
    
    console.log('\nüí° Para inspeccionar manualmente:');
    console.log('  window.debugAcordeon - Componente acorde√≥n');
    console.log('  window.debugIncidente - Datos del incidente');
    console.log('  window.debugVistaDetalle - Componente vista detalle');
}